//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SolutionDB.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SolutionDBEntities3 : DbContext
    {
        public SolutionDBEntities3()
            : base("name=SolutionDBEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Address> Addresses { get; set; }
        public virtual DbSet<Application> Applications { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Cellphone> Cellphones { get; set; }
        public virtual DbSet<Cellphone_Battery> Cellphone_Battery { get; set; }
        public virtual DbSet<Cellphone_Hardware> Cellphone_Hardware { get; set; }
        public virtual DbSet<Cellphone_Software> Cellphone_Software { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Employee_Support> Employee_Support { get; set; }
        public virtual DbSet<Incident> Incidents { get; set; }
        public virtual DbSet<No_Connection> No_Connection { get; set; }
        public virtual DbSet<O> OS { get; set; }
        public virtual DbSet<PC> PCs { get; set; }
        public virtual DbSet<Print> Prints { get; set; }
        public virtual DbSet<Print_Hardware> Print_Hardware { get; set; }
        public virtual DbSet<Print_Software> Print_Software { get; set; }
        public virtual DbSet<RegistryChange> RegistryChanges { get; set; }
        public virtual DbSet<SecondLevel> SecondLevels { get; set; }
        public virtual DbSet<Solution> Solutions { get; set; }
        public virtual DbSet<Status> Status { get; set; }
        public virtual DbSet<Urgency> Urgencies { get; set; }
        public virtual DbSet<Cellphone_Battery1> Cellphone_Batteries { get; set; }
        public virtual DbSet<Customer_Info> Customer_Info { get; set; }
    
        public virtual int usp_AddressDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_AddressDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_AddressInsert_Result> usp_AddressInsert(string city, string street, Nullable<int> zip)
        {
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressInsert_Result>("usp_AddressInsert", cityParameter, streetParameter, zipParameter);
        }
    
        public virtual ObjectResult<usp_AddressSelect_Result> usp_AddressSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressSelect_Result>("usp_AddressSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_AddressUpdate_Result> usp_AddressUpdate(Nullable<int> id, string city, string street, Nullable<int> zip)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var zipParameter = zip.HasValue ?
                new ObjectParameter("zip", zip) :
                new ObjectParameter("zip", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_AddressUpdate_Result>("usp_AddressUpdate", idParameter, cityParameter, streetParameter, zipParameter);
        }
    
        public virtual int usp_ApplicationDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_ApplicationDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationInsert_Result> usp_ApplicationInsert(Nullable<int> name, string description)
        {
            var nameParameter = name.HasValue ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationInsert_Result>("usp_ApplicationInsert", nameParameter, descriptionParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationSelect_Result> usp_ApplicationSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationSelect_Result>("usp_ApplicationSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_ApplicationUpdate_Result> usp_ApplicationUpdate(Nullable<int> id, Nullable<int> name, string description)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name.HasValue ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ApplicationUpdate_Result>("usp_ApplicationUpdate", idParameter, nameParameter, descriptionParameter);
        }
    
        public virtual int usp_CategoryDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CategoryDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_CategoryInsert_Result> usp_CategoryInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategoryInsert_Result>("usp_CategoryInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_CategorySelect_Result> usp_CategorySelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategorySelect_Result>("usp_CategorySelect", idParameter);
        }
    
        public virtual ObjectResult<usp_CategoryUpdate_Result> usp_CategoryUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CategoryUpdate_Result>("usp_CategoryUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_Cellphone_BatteryDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cellphone_BatteryDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_BatteryInsert_Result> usp_Cellphone_BatteryInsert(string name, Nullable<int> solution_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_BatteryInsert_Result>("usp_Cellphone_BatteryInsert", nameParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_BatterySelect_Result> usp_Cellphone_BatterySelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_BatterySelect_Result>("usp_Cellphone_BatterySelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_BatteryUpdate_Result> usp_Cellphone_BatteryUpdate(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_BatteryUpdate_Result>("usp_Cellphone_BatteryUpdate", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual int usp_Cellphone_HardwareDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cellphone_HardwareDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_HardwareInsert_Result> usp_Cellphone_HardwareInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_HardwareInsert_Result>("usp_Cellphone_HardwareInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_HardwareSelect_Result> usp_Cellphone_HardwareSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_HardwareSelect_Result>("usp_Cellphone_HardwareSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_HardwareUpdate_Result> usp_Cellphone_HardwareUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_HardwareUpdate_Result>("usp_Cellphone_HardwareUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_Cellphone_SoftwareDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Cellphone_SoftwareDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_SoftwareInsert_Result> usp_Cellphone_SoftwareInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_SoftwareInsert_Result>("usp_Cellphone_SoftwareInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_SoftwareSelect_Result> usp_Cellphone_SoftwareSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_SoftwareSelect_Result>("usp_Cellphone_SoftwareSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Cellphone_SoftwareUpdate_Result> usp_Cellphone_SoftwareUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Cellphone_SoftwareUpdate_Result>("usp_Cellphone_SoftwareUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_CellphoneDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CellphoneDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_CellphoneInsert_Result> usp_CellphoneInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CellphoneInsert_Result>("usp_CellphoneInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_CellphoneSelect_Result> usp_CellphoneSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CellphoneSelect_Result>("usp_CellphoneSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_CellphoneUpdate_Result> usp_CellphoneUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CellphoneUpdate_Result>("usp_CellphoneUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_CustomerDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_CustomerDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_CustomerInsert_Result> usp_CustomerInsert(string name, Nullable<int> number, Nullable<int> addr_Id, string mail)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var addr_IdParameter = addr_Id.HasValue ?
                new ObjectParameter("Addr_Id", addr_Id) :
                new ObjectParameter("Addr_Id", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerInsert_Result>("usp_CustomerInsert", nameParameter, numberParameter, addr_IdParameter, mailParameter);
        }
    
        public virtual ObjectResult<usp_CustomerSelect_Result> usp_CustomerSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerSelect_Result>("usp_CustomerSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_CustomerUpdate_Result> usp_CustomerUpdate(Nullable<int> id, string name, Nullable<int> number, Nullable<int> addr_Id, string mail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var addr_IdParameter = addr_Id.HasValue ?
                new ObjectParameter("Addr_Id", addr_Id) :
                new ObjectParameter("Addr_Id", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CustomerUpdate_Result>("usp_CustomerUpdate", idParameter, nameParameter, numberParameter, addr_IdParameter, mailParameter);
        }
    
        public virtual int usp_Employee_SupportDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Employee_SupportDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Employee_SupportInsert_Result> usp_Employee_SupportInsert(Nullable<int> name_Id, Nullable<int> supportLevel)
        {
            var name_IdParameter = name_Id.HasValue ?
                new ObjectParameter("Name_Id", name_Id) :
                new ObjectParameter("Name_Id", typeof(int));
    
            var supportLevelParameter = supportLevel.HasValue ?
                new ObjectParameter("SupportLevel", supportLevel) :
                new ObjectParameter("SupportLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_SupportInsert_Result>("usp_Employee_SupportInsert", name_IdParameter, supportLevelParameter);
        }
    
        public virtual ObjectResult<usp_Employee_SupportSelect_Result> usp_Employee_SupportSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_SupportSelect_Result>("usp_Employee_SupportSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Employee_SupportUpdate_Result> usp_Employee_SupportUpdate(Nullable<int> id, Nullable<int> name_Id, Nullable<int> supportLevel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var name_IdParameter = name_Id.HasValue ?
                new ObjectParameter("Name_Id", name_Id) :
                new ObjectParameter("Name_Id", typeof(int));
    
            var supportLevelParameter = supportLevel.HasValue ?
                new ObjectParameter("SupportLevel", supportLevel) :
                new ObjectParameter("SupportLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Employee_SupportUpdate_Result>("usp_Employee_SupportUpdate", idParameter, name_IdParameter, supportLevelParameter);
        }
    
        public virtual int usp_EmployeeDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EmployeeDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeInsert_Result> usp_EmployeeInsert(string name, Nullable<int> number, Nullable<int> addr_Id, string mail)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var addr_IdParameter = addr_Id.HasValue ?
                new ObjectParameter("Addr_Id", addr_Id) :
                new ObjectParameter("Addr_Id", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeInsert_Result>("usp_EmployeeInsert", nameParameter, numberParameter, addr_IdParameter, mailParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeSelect_Result> usp_EmployeeSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeSelect_Result>("usp_EmployeeSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_EmployeeUpdate_Result> usp_EmployeeUpdate(Nullable<int> id, string name, Nullable<int> number, Nullable<int> addr_Id, string mail)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var addr_IdParameter = addr_Id.HasValue ?
                new ObjectParameter("Addr_Id", addr_Id) :
                new ObjectParameter("Addr_Id", typeof(int));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_EmployeeUpdate_Result>("usp_EmployeeUpdate", idParameter, nameParameter, numberParameter, addr_IdParameter, mailParameter);
        }
    
        public virtual int usp_IncidentDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_IncidentDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_IncidentInsert_Result> usp_IncidentInsert(Nullable<int> caller_Id, string descrition, Nullable<int> category_Id, Nullable<int> urgency_Id, Nullable<int> status_Id, Nullable<int> solution_Id)
        {
            var caller_IdParameter = caller_Id.HasValue ?
                new ObjectParameter("Caller_Id", caller_Id) :
                new ObjectParameter("Caller_Id", typeof(int));
    
            var descritionParameter = descrition != null ?
                new ObjectParameter("Descrition", descrition) :
                new ObjectParameter("Descrition", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var urgency_IdParameter = urgency_Id.HasValue ?
                new ObjectParameter("Urgency_Id", urgency_Id) :
                new ObjectParameter("Urgency_Id", typeof(int));
    
            var status_IdParameter = status_Id.HasValue ?
                new ObjectParameter("Status_Id", status_Id) :
                new ObjectParameter("Status_Id", typeof(int));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentInsert_Result>("usp_IncidentInsert", caller_IdParameter, descritionParameter, category_IdParameter, urgency_IdParameter, status_IdParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_IncidentSelect_Result> usp_IncidentSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentSelect_Result>("usp_IncidentSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_IncidentUpdate_Result> usp_IncidentUpdate(Nullable<int> id, Nullable<int> caller_Id, string descrition, Nullable<int> category_Id, Nullable<int> urgency_Id, Nullable<int> status_Id, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var caller_IdParameter = caller_Id.HasValue ?
                new ObjectParameter("Caller_Id", caller_Id) :
                new ObjectParameter("Caller_Id", typeof(int));
    
            var descritionParameter = descrition != null ?
                new ObjectParameter("Descrition", descrition) :
                new ObjectParameter("Descrition", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var urgency_IdParameter = urgency_Id.HasValue ?
                new ObjectParameter("Urgency_Id", urgency_Id) :
                new ObjectParameter("Urgency_Id", typeof(int));
    
            var status_IdParameter = status_Id.HasValue ?
                new ObjectParameter("Status_Id", status_Id) :
                new ObjectParameter("Status_Id", typeof(int));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_IncidentUpdate_Result>("usp_IncidentUpdate", idParameter, caller_IdParameter, descritionParameter, category_IdParameter, urgency_IdParameter, status_IdParameter, solution_IdParameter);
        }
    
        public virtual int usp_No_ConnectionDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_No_ConnectionDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_No_ConnectionInsert_Result> usp_No_ConnectionInsert(string name, Nullable<int> solution_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_No_ConnectionInsert_Result>("usp_No_ConnectionInsert", nameParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_No_ConnectionSelect_Result> usp_No_ConnectionSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_No_ConnectionSelect_Result>("usp_No_ConnectionSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_No_ConnectionUpdate_Result> usp_No_ConnectionUpdate(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_No_ConnectionUpdate_Result>("usp_No_ConnectionUpdate", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual int usp_OSDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_OSDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_OSInsert_Result> usp_OSInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OSInsert_Result>("usp_OSInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_OSSelect_Result> usp_OSSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OSSelect_Result>("usp_OSSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_OSUpdate_Result> usp_OSUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_OSUpdate_Result>("usp_OSUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_PCDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PCDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_PCInsert_Result> usp_PCInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PCInsert_Result>("usp_PCInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_PCSelect_Result> usp_PCSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PCSelect_Result>("usp_PCSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_PCUpdate_Result> usp_PCUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PCUpdate_Result>("usp_PCUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_Print_HardwareDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Print_HardwareDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Print_HardwareInsert_Result> usp_Print_HardwareInsert(string name, Nullable<int> solution_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_HardwareInsert_Result>("usp_Print_HardwareInsert", nameParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_Print_HardwareSelect_Result> usp_Print_HardwareSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_HardwareSelect_Result>("usp_Print_HardwareSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Print_HardwareUpdate_Result> usp_Print_HardwareUpdate(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_HardwareUpdate_Result>("usp_Print_HardwareUpdate", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual int usp_Print_SoftwareDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Print_SoftwareDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_Print_SoftwareInsert_Result> usp_Print_SoftwareInsert(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_SoftwareInsert_Result>("usp_Print_SoftwareInsert", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_Print_SoftwareSelect_Result> usp_Print_SoftwareSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_SoftwareSelect_Result>("usp_Print_SoftwareSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_Print_SoftwareUpdate_Result> usp_Print_SoftwareUpdate(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_Print_SoftwareUpdate_Result>("usp_Print_SoftwareUpdate", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual int usp_PrintDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_PrintDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_PrintInsert_Result> usp_PrintInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PrintInsert_Result>("usp_PrintInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_PrintSelect_Result> usp_PrintSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PrintSelect_Result>("usp_PrintSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_PrintUpdate_Result> usp_PrintUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_PrintUpdate_Result>("usp_PrintUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_RegistryChangeDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_RegistryChangeDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_RegistryChangeInsert_Result> usp_RegistryChangeInsert(string name, Nullable<int> solution_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegistryChangeInsert_Result>("usp_RegistryChangeInsert", nameParameter, solution_IdParameter);
        }
    
        public virtual ObjectResult<usp_RegistryChangeSelect_Result> usp_RegistryChangeSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegistryChangeSelect_Result>("usp_RegistryChangeSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_RegistryChangeUpdate_Result> usp_RegistryChangeUpdate(Nullable<int> id, string name, Nullable<int> solution_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var solution_IdParameter = solution_Id.HasValue ?
                new ObjectParameter("Solution_Id", solution_Id) :
                new ObjectParameter("Solution_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_RegistryChangeUpdate_Result>("usp_RegistryChangeUpdate", idParameter, nameParameter, solution_IdParameter);
        }
    
        public virtual int usp_SecondLevelDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SecondLevelDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_SecondLevelInsert_Result> usp_SecondLevelInsert(Nullable<int> ticket_Id)
        {
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("Ticket_Id", ticket_Id) :
                new ObjectParameter("Ticket_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SecondLevelInsert_Result>("usp_SecondLevelInsert", ticket_IdParameter);
        }
    
        public virtual ObjectResult<usp_SecondLevelSelect_Result> usp_SecondLevelSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SecondLevelSelect_Result>("usp_SecondLevelSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_SecondLevelUpdate_Result> usp_SecondLevelUpdate(Nullable<int> id, Nullable<int> ticket_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var ticket_IdParameter = ticket_Id.HasValue ?
                new ObjectParameter("Ticket_Id", ticket_Id) :
                new ObjectParameter("Ticket_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SecondLevelUpdate_Result>("usp_SecondLevelUpdate", idParameter, ticket_IdParameter);
        }
    
        public virtual int usp_SolutionDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_SolutionDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_SolutionInsert_Result> usp_SolutionInsert(string name, Nullable<int> category_Id, string solution, Nullable<int> supportLevel)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var solutionParameter = solution != null ?
                new ObjectParameter("Solution", solution) :
                new ObjectParameter("Solution", typeof(string));
    
            var supportLevelParameter = supportLevel.HasValue ?
                new ObjectParameter("SupportLevel", supportLevel) :
                new ObjectParameter("SupportLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SolutionInsert_Result>("usp_SolutionInsert", nameParameter, category_IdParameter, solutionParameter, supportLevelParameter);
        }
    
        public virtual ObjectResult<usp_SolutionSelect_Result> usp_SolutionSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SolutionSelect_Result>("usp_SolutionSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_SolutionUpdate_Result> usp_SolutionUpdate(Nullable<int> id, string name, Nullable<int> category_Id, string solution, Nullable<int> supportLevel)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var category_IdParameter = category_Id.HasValue ?
                new ObjectParameter("Category_Id", category_Id) :
                new ObjectParameter("Category_Id", typeof(int));
    
            var solutionParameter = solution != null ?
                new ObjectParameter("Solution", solution) :
                new ObjectParameter("Solution", typeof(string));
    
            var supportLevelParameter = supportLevel.HasValue ?
                new ObjectParameter("SupportLevel", supportLevel) :
                new ObjectParameter("SupportLevel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SolutionUpdate_Result>("usp_SolutionUpdate", idParameter, nameParameter, category_IdParameter, solutionParameter, supportLevelParameter);
        }
    
        public virtual int usp_StatusDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_StatusDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_StatusInsert_Result> usp_StatusInsert(string state)
        {
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatusInsert_Result>("usp_StatusInsert", stateParameter);
        }
    
        public virtual ObjectResult<usp_StatusSelect_Result> usp_StatusSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatusSelect_Result>("usp_StatusSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_StatusUpdate_Result> usp_StatusUpdate(Nullable<int> id, string state)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_StatusUpdate_Result>("usp_StatusUpdate", idParameter, stateParameter);
        }
    
        public virtual int usp_TableDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_TableDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_TableInsert_Result> usp_TableInsert(string name, Nullable<int> subCategory_Id)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TableInsert_Result>("usp_TableInsert", nameParameter, subCategory_IdParameter);
        }
    
        public virtual ObjectResult<usp_TableSelect_Result> usp_TableSelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TableSelect_Result>("usp_TableSelect", idParameter);
        }
    
        public virtual ObjectResult<usp_TableUpdate_Result> usp_TableUpdate(Nullable<int> id, string name, Nullable<int> subCategory_Id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var subCategory_IdParameter = subCategory_Id.HasValue ?
                new ObjectParameter("SubCategory_Id", subCategory_Id) :
                new ObjectParameter("SubCategory_Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_TableUpdate_Result>("usp_TableUpdate", idParameter, nameParameter, subCategory_IdParameter);
        }
    
        public virtual int usp_UrgencyDelete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UrgencyDelete", idParameter);
        }
    
        public virtual ObjectResult<usp_UrgencyInsert_Result> usp_UrgencyInsert(string urgencyState)
        {
            var urgencyStateParameter = urgencyState != null ?
                new ObjectParameter("UrgencyState", urgencyState) :
                new ObjectParameter("UrgencyState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UrgencyInsert_Result>("usp_UrgencyInsert", urgencyStateParameter);
        }
    
        public virtual ObjectResult<usp_UrgencySelect_Result> usp_UrgencySelect(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UrgencySelect_Result>("usp_UrgencySelect", idParameter);
        }
    
        public virtual ObjectResult<usp_UrgencyUpdate_Result> usp_UrgencyUpdate(Nullable<int> id, string urgencyState)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var urgencyStateParameter = urgencyState != null ?
                new ObjectParameter("UrgencyState", urgencyState) :
                new ObjectParameter("UrgencyState", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_UrgencyUpdate_Result>("usp_UrgencyUpdate", idParameter, urgencyStateParameter);
        }
    }
}
